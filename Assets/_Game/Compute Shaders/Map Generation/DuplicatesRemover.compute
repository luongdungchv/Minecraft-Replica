// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture

struct InstanceData{
    float4x4 trs;
    int blockType;
};

StructuredBuffer<InstanceData> input;
RWStructuredBuffer<int> checker;
AppendStructuredBuffer<int> output;

[numthreads(128,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    int value = input[id.x].blockType;
    if(value == 0) return;
    int originalVal = 0;
    InterlockedAdd(checker[value], 1, originalVal);
    if(originalVal == 0){
        output.Append(value);
    }
}
